{
  "uid" : "d9f9cbfe5f4645bc",
  "name" : "test_zhuce",
  "fullName" : "testCase.test_zhuce.TestUI#test_zhuce",
  "historyId" : "fbfe66d2dfc8ddf29351faa5445512f5",
  "time" : {
    "start" : 1562209215338,
    "stop" : 1562209223006,
    "duration" : 7668
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=75.0.3770.100)\n  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.17763 x86_64)",
  "statusTrace" : "self = <testCase.test_zhuce.TestUI object at 0x04A8E190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b210465c2480265055b19e054424a9dc\")>\n\n    def test_zhuce(self,driver):\n        base = baseUI(driver)\n        driver.get(\"http://10.10.10.149:8081\")  # 货主承运\n        base.click('注册新账号',\"//span[contains(text(),'注册新账号')]\")\n        base.click('点击\"知道了\"注册须知',\"//*[@id='app']/div/div[2]/div/div/button/span\")\n        base.send_keys('输入手机号','//input[@class=\"el-input__inner\"]',\"18201972309\")\n        base.click('获取验证码',\"//span[contains(text(),'获取验证码')]\")\n        base.send_keys('输入验证码','(//input[@class=\"el-input__inner\"])[2]',\"    \")# ------------------\n        base.click('勾选服务条款协议','//span[@class=\"el-checkbox__inner\"]')\n        base.click('下一步',\"//span[contains(text(),'下一步')]\")\n        base.send_keys('上传营业执照','//i[@class=\"el-icon-plus avatar-uploader-icon\"]',\n>                      \"C:\\\\Users\\\\DELL\\\\Desktop\\\\认证图片\\\\营业执照(1)\\\\营业执照\\\\南京聚力医药.jpg\")\n\ntestCase\\test_zhuce.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\baseui.py:19: in function\n    res = func(*args, **kwargs)\nCommon\\baseui.py:42: in send_keys\n    element = self.local_element(xpath)\nCommon\\baseui.py:31: in local_element\n    return WebDriverWait(self.driver, 10, 0.5).until(EC.presence_of_element_located((By.XPATH,xpath)))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:71: in until\n    value = method(self._driver)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:64: in __call__\n    return _find_element(driver, self.locator)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:415: in _find_element\n    raise e\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:411: in _find_element\n    return driver.find_element(*by)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0440F1D0>\nresponse = {'sessionId': 'b210465c2480265055b19e054424a9dc', 'status': 23, 'value': {'message': 'no such window: target window al...ver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.17763 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=75.0.3770.100)\nE         (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.17763 x86_64)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchWindowException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1562209177232,
      "stop" : 1562209183191,
      "duration" : 5959
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1562209215337,
      "stop" : 1562209215337,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=75.0.3770.100)\n  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.17763 x86_64)",
    "statusTrace" : "self = <testCase.test_zhuce.TestUI object at 0x04A8E190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b210465c2480265055b19e054424a9dc\")>\n\n    def test_zhuce(self,driver):\n        base = baseUI(driver)\n        driver.get(\"http://10.10.10.149:8081\")  # 货主承运\n        base.click('注册新账号',\"//span[contains(text(),'注册新账号')]\")\n        base.click('点击\"知道了\"注册须知',\"//*[@id='app']/div/div[2]/div/div/button/span\")\n        base.send_keys('输入手机号','//input[@class=\"el-input__inner\"]',\"18201972309\")\n        base.click('获取验证码',\"//span[contains(text(),'获取验证码')]\")\n        base.send_keys('输入验证码','(//input[@class=\"el-input__inner\"])[2]',\"    \")# ------------------\n        base.click('勾选服务条款协议','//span[@class=\"el-checkbox__inner\"]')\n        base.click('下一步',\"//span[contains(text(),'下一步')]\")\n        base.send_keys('上传营业执照','//i[@class=\"el-icon-plus avatar-uploader-icon\"]',\n>                      \"C:\\\\Users\\\\DELL\\\\Desktop\\\\认证图片\\\\营业执照(1)\\\\营业执照\\\\南京聚力医药.jpg\")\n\ntestCase\\test_zhuce.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\baseui.py:19: in function\n    res = func(*args, **kwargs)\nCommon\\baseui.py:42: in send_keys\n    element = self.local_element(xpath)\nCommon\\baseui.py:31: in local_element\n    return WebDriverWait(self.driver, 10, 0.5).until(EC.presence_of_element_located((By.XPATH,xpath)))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:71: in until\n    value = method(self._driver)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:64: in __call__\n    return _find_element(driver, self.locator)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:415: in _find_element\n    raise e\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:411: in _find_element\n    return driver.find_element(*by)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0440F1D0>\nresponse = {'sessionId': 'b210465c2480265055b19e054424a9dc', 'status': 23, 'value': {'message': 'no such window: target window al...ver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.17763 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=75.0.3770.100)\nE         (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.17763 x86_64)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchWindowException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3c01ce7dfea35995",
      "name" : "注册新账号之前",
      "source" : "3c01ce7dfea35995.png",
      "type" : "image/png",
      "size" : 177036
    }, {
      "uid" : "b684b7ffe19b23f2",
      "name" : "注册新账号之后",
      "source" : "b684b7ffe19b23f2.png",
      "type" : "image/png",
      "size" : 31583
    }, {
      "uid" : "4d7f2b26c5327519",
      "name" : "点击\"知道了\"注册须知之前",
      "source" : "4d7f2b26c5327519.png",
      "type" : "image/png",
      "size" : 31139
    }, {
      "uid" : "5065f90e249f03dd",
      "name" : "点击\"知道了\"注册须知之后",
      "source" : "5065f90e249f03dd.png",
      "type" : "image/png",
      "size" : 25319
    }, {
      "uid" : "32d8ed9b599670a0",
      "name" : "输入手机号之前",
      "source" : "32d8ed9b599670a0.png",
      "type" : "image/png",
      "size" : 25319
    }, {
      "uid" : "53e3aa5bbbb7047c",
      "name" : "输入手机号之后",
      "source" : "53e3aa5bbbb7047c.png",
      "type" : "image/png",
      "size" : 28369
    }, {
      "uid" : "bab7138560b74a9",
      "name" : "获取验证码之前",
      "source" : "bab7138560b74a9.png",
      "type" : "image/png",
      "size" : 26459
    }, {
      "uid" : "3de46c6f55eaa57c",
      "name" : "获取验证码之后",
      "source" : "3de46c6f55eaa57c.png",
      "type" : "image/png",
      "size" : 26030
    }, {
      "uid" : "eedb9ebf0d8f7c00",
      "name" : "输入验证码之前",
      "source" : "eedb9ebf0d8f7c00.png",
      "type" : "image/png",
      "size" : 26001
    }, {
      "uid" : "4aa77eaad531bbbb",
      "name" : "输入验证码之后",
      "source" : "4aa77eaad531bbbb.png",
      "type" : "image/png",
      "size" : 25993
    }, {
      "uid" : "da7be8a0f1c79e29",
      "name" : "勾选服务条款协议之前",
      "source" : "da7be8a0f1c79e29.png",
      "type" : "image/png",
      "size" : 25933
    }, {
      "uid" : "657d2dbce9e3d662",
      "name" : "勾选服务条款协议之后",
      "source" : "657d2dbce9e3d662.png",
      "type" : "image/png",
      "size" : 30020
    }, {
      "uid" : "f49cc78d43866f64",
      "name" : "下一步之前",
      "source" : "f49cc78d43866f64.png",
      "type" : "image/png",
      "size" : 27646
    }, {
      "uid" : "de68fac5abef4024",
      "name" : "下一步之后",
      "source" : "de68fac5abef4024.png",
      "type" : "image/png",
      "size" : 27524
    }, {
      "uid" : "2aba3511b932f9bc",
      "name" : "上传营业执照之前",
      "source" : "2aba3511b932f9bc.png",
      "type" : "image/png",
      "size" : 27536
    }, {
      "uid" : "a0dc85f0e47b8844",
      "name" : "log",
      "source" : "a0dc85f0e47b8844.txt",
      "type" : "text/plain",
      "size" : 15903
    }, {
      "uid" : "dc868018110899ed",
      "name" : "stdout",
      "source" : "dc868018110899ed.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "d74049a565dd8730",
      "name" : "stderr",
      "source" : "d74049a565dd8730.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 18
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1562209223937,
      "stop" : 1562209226974,
      "duration" : 3037
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testCase"
  }, {
    "name" : "suite",
    "value" : "test_zhuce"
  }, {
    "name" : "subSuite",
    "value" : "TestUI"
  }, {
    "name" : "host",
    "value" : "DESKTOP-380L58D"
  }, {
    "name" : "thread",
    "value" : "25208-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.test_zhuce"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "d9f9cbfe5f4645bc.json",
  "parameterValues" : [ ]
}